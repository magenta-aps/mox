# SPDX-FileCopyrightText: 2019-2020 Magenta ApS
# SPDX-License-Identifier: MPL-2.0

# THIS FILE CONTAINS THE DEFAULT CONFIGURATION FOR MOX. DO NOT CHANGE THIS.
# Instead, read the documentation at ``user/settings.html`` or configure mox in
# the dev-settings.toml file.

# Prefix for all relative URLs. A value of "/MyOIO" will result in API
# endpoints such ``http://example.com/MyOIO/organisation/organisationenhed``.
base_url = ""


[database]
host = "localhost"
port = 5432
user = "mox"
password = "mox"
db_name = "mox"


[saml_sso]
# These are the settings for the `flask_saml_sso` package. Please refer to the
# package for the documentation of these settings:
# https://github.com/magenta-aps/flask_saml_sso.
enable = false
idp_metadata_url = "https://172.16.20.100/simplesaml/saml2/idp/metadata.php"
idp_insecure = false
requests_signed = false
key_file = ""
cert_file = ""
sqlalchemy_uri = "postgresql://sessions:sessions@127.0.0.1/sessions"
session_permanent = true
permanent_session_lifetime = 3600


[restrictions]
# Whether authorization is enabled.
# If not, the restrictions module is not called.
enable = false
# The module which implements the authorization restrictions.
# Must be present in sys.path.
module = "oio_rest.auth.wso_restrictions"
# The name of the function which retrieves the restrictions.
# Must be present in AUTH_RESTRICTION_MODULE and have the correct signature.
function = 'get_auth_restrictions'


[file_upload]
# This is where file uploads are stored. It must be readable and writable by
# the mox user, running the REST API server. This is used in the Dokument
# hierarchy.
folder = "/var/mox"


[audit_log]
host = ""
exchange = "mox.log"
queue = "mox.log_queue"
ignored_services = ["Log"]


[db_extensions]
path = ""


[log]
activity_log_path = "activity.log"
log_path = "oio_rest.log"
log_level = "WARNING"


[testing_api]
# If enabled, expose /testing/db-* endpoint for setup, reset and teardown of a
# test database. Useful for integration tests from other components such as MO.
# Does not work when running multi-threaded.
enable = false


[truncate_api]
# If enabled, exposes /db/truncate endpoint, for truncating the current
# database.
enable = false
